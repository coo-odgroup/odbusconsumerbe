{
    "openapi": "3.0.0",
    "info": {
        "title": "ODBUS Consumer APIs",
        "description": "L5 Swagger OpenApi description for ODBUS Consumer APIs",
        "version": "0.1"
    },
    "paths": {
        "/api/MakePayment": {
            "post": {
                "tags": [
                    "MakePayment API"
                ],
                "summary": "generating razorpay order Id",
                "description": "generating razorpay order Id",
                "operationId": "App\\Http\\Controllers\\ChannelController::makePayment",
                "parameters": [
                    {
                        "name": "seat_id",
                        "in": "query",
                        "description": "bus seats ids",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "seat_id[]",
                        "in": "query",
                        "description": "seat Ids",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        }
                    },
                    {
                        "name": "transaction_id",
                        "in": "query",
                        "description": "customer transaction id against booking",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "total price",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Order Id generated Successfully"
                    },
                    "406": {
                        "description": "seats already booked"
                    },
                    "404": {
                        "description": "Invalid Argument Passed"
                    }
                }
            }
        },
        "/api/PaymentStatus": {
            "post": {
                "tags": [
                    "PaymentStatus API"
                ],
                "summary": "payment status success or failure",
                "operationId": "App\\Http\\Controllers\\ChannelController::pay",
                "requestBody": {
                    "description": "updating payment status and sending email/sms to customers with ticket booking details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "transaction_id": {
                                        "type": "string",
                                        "example": "20210722102640458159"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Bob"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "exapmle@gmail.com"
                                    },
                                    "routedetails": {
                                        "type": "string",
                                        "example": "Bhubaneswar-Sambalpur"
                                    },
                                    "razorpay_order_id": {
                                        "type": "string",
                                        "example": "order_HYnmFzO1W4mj8P"
                                    },
                                    "razorpay_payment_id": {
                                        "type": "string",
                                        "example": "pay_HYnmWNISavDZN8"
                                    },
                                    "razorpay_signature": {
                                        "type": "string",
                                        "example": "d94a898e130f431394466bd3a06ffc5f2a0471a0d4923b0b190b5576d52b6d95"
                                    },
                                    "bookingdate": {
                                        "type": "string",
                                        "example": "02-05-2021"
                                    },
                                    "journeydate": {
                                        "type": "string",
                                        "example": "08-05-2021"
                                    },
                                    "boarding_point": {
                                        "type": "string",
                                        "example": "Bermunda"
                                    },
                                    "departureTime": {
                                        "type": "string",
                                        "example": "21:00PM"
                                    },
                                    "dropping_point": {
                                        "type": "string",
                                        "example": "Hirakud"
                                    },
                                    "arrivalTime": {
                                        "type": "string",
                                        "example": "06:30AM"
                                    },
                                    "busname": {
                                        "type": "string",
                                        "example": "Jagakalia"
                                    },
                                    "busNumber": {
                                        "type": "string",
                                        "example": "OD B 8657"
                                    },
                                    "bustype": {
                                        "type": "string",
                                        "example": "AC"
                                    },
                                    "busTypeName": {
                                        "type": "string",
                                        "example": "DELUX"
                                    },
                                    "sittingType": {
                                        "type": "string",
                                        "example": "2+2"
                                    },
                                    "conductor_number": {
                                        "type": "string",
                                        "example": "9912334563"
                                    },
                                    "totalfare": {
                                        "type": "string",
                                        "example": "800"
                                    },
                                    "seat_id": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "passengerDetails": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "passenger_name": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "passenger_gender": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "passenger_age": {
                                                    "type": "string",
                                                    "example": ""
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "example": [
                                            {
                                                "passenger_name": "Bob",
                                                "passenger_gender": "M",
                                                "passenger_age": "25"
                                            },
                                            {
                                                "passenger_name": "",
                                                "passenger_gender": "",
                                                "passenger_age": ""
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment successfully done"
                    },
                    "402": {
                        "description": "Payment required"
                    },
                    "404": {
                        "description": "Invalid Argument Passed"
                    }
                }
            }
        },
        "/api/getLocation": {
            "get": {
                "tags": [
                    "getLocation API"
                ],
                "summary": "Get List of Locations",
                "description": "Locations with SearchValue params",
                "operationId": "App\\Http\\Controllers\\ListingController::getLocation",
                "parameters": [
                    {
                        "name": "locationName",
                        "in": "query",
                        "description": "name or synonym of Location",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "all locations"
                    }
                }
            }
        },
        "/api/Listing": {
            "get": {
                "tags": [
                    "Listing API"
                ],
                "summary": "Get List of Buses",
                "description": "Listing",
                "operationId": "App\\Http\\Controllers\\ListingController::getAllListing",
                "parameters": [
                    {
                        "name": "source",
                        "in": "query",
                        "description": "name of source",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "destination",
                        "in": "query",
                        "description": "name of destination",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entry_date",
                        "in": "query",
                        "description": "journey date",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Buses"
                    }
                }
            }
        },
        "/api/Filter": {
            "get": {
                "tags": [
                    "Filter API"
                ],
                "summary": "Get List of Buses with Filter Params",
                "description": "Filter",
                "operationId": "App\\Http\\Controllers\\ListingController::filter",
                "parameters": [
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Buses sort by price:0-without sorting, 1- ascending order sorting",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sourceID",
                        "in": "query",
                        "description": "source Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "destinationID",
                        "in": "query",
                        "description": "destination Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "entry_date",
                        "in": "query",
                        "description": "journey date",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "busType[]",
                        "in": "query",
                        "description": "AC or NONAC type Bus:1-AC, 2-NONAC",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        }
                    },
                    {
                        "name": "seatType[]",
                        "in": "query",
                        "description": "Seater or Sleeper type Bus:1-seater, 2&3-sleeper",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        }
                    },
                    {
                        "name": "boardingPointId[]",
                        "in": "query",
                        "description": "Boarding point Ids",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        }
                    },
                    {
                        "name": "dropingingPointId[]",
                        "in": "query",
                        "description": "Dropping point Ids",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        }
                    },
                    {
                        "name": "operatorId[]",
                        "in": "query",
                        "description": "Operator Ids",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        }
                    },
                    {
                        "name": "amenityId[]",
                        "in": "query",
                        "description": "Amenity Ids",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Buses"
                    }
                }
            }
        },
        "/api/FilterOptions": {
            "get": {
                "tags": [
                    "FilterOptions API"
                ],
                "summary": "Get all Filter options",
                "description": "get all Filter options for BusType,SeatType,BoardingPoints,DroppingPoints,Operators,Amenities",
                "operationId": "App\\Http\\Controllers\\ListingController::getFilterOptions",
                "parameters": [
                    {
                        "name": "sourceID",
                        "in": "query",
                        "description": "source Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "destinationID",
                        "in": "query",
                        "description": "destination Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get all Filter Options"
                    }
                }
            }
        },
        "/api/Register": {
            "post": {
                "tags": [
                    "Register API"
                ],
                "summary": "send OTP to user for registration",
                "description": "user detatils saved and otp generated",
                "operationId": "App\\Http\\Controllers\\UsersController::Register",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "name of user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "email of user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "description": "mobile number of user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "description": "created by",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "otp generated"
                    },
                    "206": {
                        "description": "not a valid credential"
                    }
                }
            }
        },
        "/api/VerifyOtp": {
            "post": {
                "tags": [
                    "JWT Auth"
                ],
                "summary": "otp verification and  generating authentication token",
                "description": "otp verification and  generating authentication token",
                "operationId": "App\\Http\\Controllers\\UsersController::verifyOtp",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "user Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "otp",
                        "in": "query",
                        "description": "otp set to user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Registered successfully"
                    },
                    "206": {
                        "description": "otp not provided"
                    },
                    "406": {
                        "description": "Invalid otp"
                    }
                }
            }
        },
        "/api/Login": {
            "post": {
                "tags": [
                    "Login API"
                ],
                "summary": "user login using phone or email",
                "description": "user login using phone or email",
                "operationId": "App\\Http\\Controllers\\UsersController::login",
                "parameters": [
                    {
                        "name": "phone",
                        "in": "query",
                        "description": "phone of user",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "email of user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "otp generated"
                    },
                    "206": {
                        "description": "not a valid credential"
                    }
                }
            }
        },
        "/api/UserProfile": {
            "get": {
                "tags": [
                    "JWT Auth"
                ],
                "summary": "Get user details",
                "operationId": "App\\Http\\Controllers\\UsersController::userProfile",
                "responses": {
                    "200": {
                        "description": "Authorized User details"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/viewSeats": {
            "get": {
                "tags": [
                    "viewSeats API"
                ],
                "summary": "Get seat information for a Bus with seat layout",
                "description": "get all seat Information  for a Bus",
                "operationId": "App\\Http\\Controllers\\ViewSeatsController::getAllViewSeats",
                "parameters": [
                    {
                        "name": "busId",
                        "in": "query",
                        "description": "bus Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": " get all seats information"
                    }
                }
            }
        },
        "/api/PriceOnSeatsSelection": {
            "get": {
                "tags": [
                    "PriceOnSeatsSelection API"
                ],
                "summary": "get total price on seat selection",
                "description": "get total price on seat selection",
                "operationId": "App\\Http\\Controllers\\ViewSeatsController::getPriceOnSeatsSelection",
                "parameters": [
                    {
                        "name": "busId",
                        "in": "query",
                        "description": "bus Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sourceId",
                        "in": "query",
                        "description": "source Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "destinationId",
                        "in": "query",
                        "description": "destination Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "seater[string]",
                        "in": "query",
                        "description": "seater Ids",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        }
                    },
                    {
                        "name": "sleeper[]",
                        "in": "query",
                        "description": "sleeper Ids",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": " get Total Price on seats selection"
                    }
                }
            }
        },
        "/api/BoardingDroppingPoints": {
            "get": {
                "tags": [
                    "BoardingDroppingPoints API"
                ],
                "summary": "get all Boarding Dropping Points",
                "description": "get all Boarding Dropping Points for source and destination",
                "operationId": "App\\Http\\Controllers\\ViewSeatsController::getBoardingDroppingPoints",
                "parameters": [
                    {
                        "name": "busId",
                        "in": "query",
                        "description": "bus Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sourceId",
                        "in": "query",
                        "description": "source Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "destinationId",
                        "in": "query",
                        "description": "destination Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": " get all Boarding Dropping Points"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "apiAuth": {
                "type": "http",
                "name": "Token based",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        []
    ]
}