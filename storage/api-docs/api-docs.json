{
    "openapi": "3.0.0",
    "info": {
        "title": "ODBUS Consumer APIs",
        "description": "L5 Swagger OpenApi description for ODBUS Consumer APIs",
        "version": "0.1"
    },
    "paths": {
        "/api/AgentBooking": {
            "post": {
                "tags": [
                    "AgentBooking API"
                ],
                "summary": "Ticket Booking by an Agent with customer details",
                "operationId": "App\\Http\\Controllers\\AgentBookingController::agentBooking",
                "requestBody": {
                    "description": "Ticket Booking by an Agent",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "customerInfo": {
                                        "properties": {
                                            "email": {
                                                "type": "string",
                                                "default": "abc@gmail.com",
                                                "example": "abc@gmail.com"
                                            },
                                            "phone": {
                                                "type": "number",
                                                "default": 9912345678,
                                                "example": 9912345678
                                            },
                                            "name": {
                                                "type": "string",
                                                "default": "Bob",
                                                "example": "Bob"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "agentInfo": {
                                        "properties": {
                                            "email": {
                                                "type": "string",
                                                "default": "abcdfr@gmail.com",
                                                "example": "abcdfr@gmail.com"
                                            },
                                            "phone": {
                                                "type": "number",
                                                "default": 9912345673,
                                                "example": 9912345673
                                            },
                                            "name": {
                                                "type": "string",
                                                "default": "Bob",
                                                "example": "Bob"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "bookingInfo": {
                                        "properties": {
                                            "bus_operator_id": {
                                                "type": "number",
                                                "default": 1,
                                                "example": 1
                                            },
                                            "bus_id": {
                                                "type": "number",
                                                "default": 3,
                                                "example": 3
                                            },
                                            "source_id": {
                                                "type": "number",
                                                "default": 1345,
                                                "example": 1345
                                            },
                                            "destination_id": {
                                                "type": "number",
                                                "default": 1374,
                                                "example": 1374
                                            },
                                            "journey_dt": {
                                                "type": "string",
                                                "default": "2021-10-09",
                                                "example": "2021-10-09"
                                            },
                                            "boarding_point": {
                                                "type": "string",
                                                "default": "Bus stand",
                                                "example": "Bus stand"
                                            },
                                            "dropping_point": {
                                                "type": "string",
                                                "default": "bus stand",
                                                "example": "bus stand"
                                            },
                                            "boarding_time": {
                                                "type": "string",
                                                "default": "21:00",
                                                "example": "21:00"
                                            },
                                            "dropping_time": {
                                                "type": "string",
                                                "default": "06:30",
                                                "example": "06:30"
                                            },
                                            "origin": {
                                                "type": "string",
                                                "default": "ODBUS",
                                                "example": "ODBUS"
                                            },
                                            "app_type": {
                                                "type": "string",
                                                "default": "WEB",
                                                "example": "WEB"
                                            },
                                            "typ_id": {
                                                "type": "number",
                                                "default": "1",
                                                "example": "1"
                                            },
                                            "total_fare": {
                                                "type": "double",
                                                "default": "1000",
                                                "example": "1000"
                                            },
                                            "owner_fare": {
                                                "type": "double",
                                                "default": "900",
                                                "example": "900"
                                            },
                                            "odbus_service_Charges": {
                                                "type": "double",
                                                "default": "70",
                                                "example": "70"
                                            },
                                            "odbus_gst_charges": {
                                                "type": "number",
                                                "default": "5",
                                                "example": "5"
                                            },
                                            "odbus_gst_amount": {
                                                "type": "double",
                                                "default": "50",
                                                "example": "50"
                                            },
                                            "owner_gst_charges": {
                                                "type": "number",
                                                "default": "5",
                                                "example": "5"
                                            },
                                            "owner_gst_amount": {
                                                "type": "double",
                                                "default": "50",
                                                "example": "50"
                                            },
                                            "created_by": {
                                                "type": "string",
                                                "default": "Customer",
                                                "example": "Customer"
                                            },
                                            "bookingDetail": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "bus_seats_id": {
                                                            "type": "string",
                                                            "example": "ST1"
                                                        },
                                                        "passenger_name": {
                                                            "type": "string",
                                                            "example": "Bob"
                                                        },
                                                        "passenger_gender": {
                                                            "type": "string",
                                                            "example": "M"
                                                        },
                                                        "passenger_age": {
                                                            "type": "string",
                                                            "example": "22"
                                                        },
                                                        "created_by": {
                                                            "type": "string",
                                                            "example": "Customer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "example": [
                                                    {
                                                        "bus_seats_id": "49",
                                                        "passenger_name": "Bob",
                                                        "passenger_gender": "M",
                                                        "passenger_age": "22",
                                                        "created_by": "Customer"
                                                    },
                                                    {
                                                        "bus_seats_id": "50",
                                                        "passenger_name": "Mom",
                                                        "passenger_gender": "F",
                                                        "passenger_age": "20",
                                                        "created_by": "Customer"
                                                    }
                                                ]
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "records added"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/BookTicket": {
            "post": {
                "tags": [
                    "BookTicket API"
                ],
                "summary": "Ticket Booking with customer details",
                "operationId": "App\\Http\\Controllers\\BookTicketController::bookTicket",
                "requestBody": {
                    "description": "Ticket Booking with customer details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "customerInfo": {
                                        "properties": {
                                            "email": {
                                                "type": "string",
                                                "default": "abc@gmail.com",
                                                "example": "abc@gmail.com"
                                            },
                                            "phone": {
                                                "type": "number",
                                                "default": 9912345678,
                                                "example": 9912345678
                                            },
                                            "name": {
                                                "type": "string",
                                                "default": "Bob",
                                                "example": "Bob"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "bookingInfo": {
                                        "properties": {
                                            "bus_operator_id": {
                                                "type": "number",
                                                "default": 1,
                                                "example": 1
                                            },
                                            "bus_id": {
                                                "type": "number",
                                                "default": 3,
                                                "example": 3
                                            },
                                            "source_id": {
                                                "type": "number",
                                                "default": 1345,
                                                "example": 1345
                                            },
                                            "destination_id": {
                                                "type": "number",
                                                "default": 1374,
                                                "example": 1374
                                            },
                                            "journey_dt": {
                                                "type": "string",
                                                "default": "2021-10-09",
                                                "example": "2021-10-09"
                                            },
                                            "boarding_point": {
                                                "type": "string",
                                                "default": "Bus stand",
                                                "example": "Bus stand"
                                            },
                                            "dropping_point": {
                                                "type": "string",
                                                "default": "bus stand",
                                                "example": "bus stand"
                                            },
                                            "boarding_time": {
                                                "type": "string",
                                                "default": "21:00",
                                                "example": "21:00"
                                            },
                                            "dropping_time": {
                                                "type": "string",
                                                "default": "06:30",
                                                "example": "06:30"
                                            },
                                            "origin": {
                                                "type": "string",
                                                "default": "ODBUS",
                                                "example": "ODBUS"
                                            },
                                            "app_type": {
                                                "type": "string",
                                                "default": "WEB",
                                                "example": "WEB"
                                            },
                                            "typ_id": {
                                                "type": "number",
                                                "default": "1",
                                                "example": "1"
                                            },
                                            "total_fare": {
                                                "type": "double",
                                                "default": "1000",
                                                "example": "1000"
                                            },
                                            "owner_fare": {
                                                "type": "double",
                                                "default": "900",
                                                "example": "900"
                                            },
                                            "odbus_service_Charges": {
                                                "type": "double",
                                                "default": "70",
                                                "example": "70"
                                            },
                                            "odbus_gst_charges": {
                                                "type": "number",
                                                "default": "5",
                                                "example": "5"
                                            },
                                            "odbus_gst_amount": {
                                                "type": "double",
                                                "default": "50",
                                                "example": "50"
                                            },
                                            "owner_gst_charges": {
                                                "type": "number",
                                                "default": "5",
                                                "example": "5"
                                            },
                                            "owner_gst_amount": {
                                                "type": "double",
                                                "default": "50",
                                                "example": "50"
                                            },
                                            "created_by": {
                                                "type": "string",
                                                "default": "Customer",
                                                "example": "Customer"
                                            },
                                            "bookingDetail": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "bus_seats_id": {
                                                            "type": "string",
                                                            "example": "ST1"
                                                        },
                                                        "passenger_name": {
                                                            "type": "string",
                                                            "example": "Bob"
                                                        },
                                                        "passenger_gender": {
                                                            "type": "string",
                                                            "example": "M"
                                                        },
                                                        "passenger_age": {
                                                            "type": "string",
                                                            "example": "22"
                                                        },
                                                        "created_by": {
                                                            "type": "string",
                                                            "example": "Customer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "example": [
                                                    {
                                                        "bus_seats_id": "49",
                                                        "passenger_name": "Bob",
                                                        "passenger_gender": "M",
                                                        "passenger_age": "22",
                                                        "created_by": "Customer"
                                                    },
                                                    {
                                                        "bus_seats_id": "50",
                                                        "passenger_name": "Mom",
                                                        "passenger_gender": "F",
                                                        "passenger_age": "20",
                                                        "created_by": "Customer"
                                                    }
                                                ]
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "records added"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/JourneyDetails": {
            "post": {
                "tags": [
                    "Journey details of a costumer"
                ],
                "summary": "Journey Details",
                "description": "Journey Details",
                "operationId": "App\\Http\\Controllers\\BookingManageController::getJourneyDetails",
                "parameters": [
                    {
                        "name": "pnr",
                        "in": "query",
                        "description": "pnr",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "mobile",
                        "in": "query",
                        "description": "mobile",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get all Journey details"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/PassengerDetails": {
            "post": {
                "tags": [
                    "Passenger details"
                ],
                "summary": "Passenger Details",
                "description": "Passenger Details",
                "operationId": "App\\Http\\Controllers\\BookingManageController::getPassengerDetails",
                "parameters": [
                    {
                        "name": "pnr",
                        "in": "query",
                        "description": "pnr",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "mobile",
                        "in": "query",
                        "description": "mobile",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get all Passenger details"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/BookingDetails": {
            "post": {
                "tags": [
                    "Booking details of a customer"
                ],
                "summary": "Booking Details",
                "description": "Booking Details",
                "operationId": "App\\Http\\Controllers\\BookingManageController::getBookingDetails",
                "parameters": [
                    {
                        "name": "pnr",
                        "in": "query",
                        "description": "pnr",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "mobile",
                        "in": "query",
                        "description": "mobile",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get all Booking details of a customer"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/EmailSms": {
            "post": {
                "tags": [
                    "email/sms send"
                ],
                "summary": "send email/sms",
                "description": "send email/sms",
                "operationId": "App\\Http\\Controllers\\BookingManageController::emailSms",
                "parameters": [
                    {
                        "name": "pnr",
                        "in": "query",
                        "description": "pnr",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "mobile",
                        "in": "query",
                        "description": "mobile",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "send email/sms"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/cancelTicketInfo": {
            "post": {
                "tags": [
                    "Ticket Cancel Information"
                ],
                "summary": "Ticket Cancel Information",
                "description": "Ticket Cancel Information",
                "operationId": "App\\Http\\Controllers\\BookingManageController::cancelTicketInfo",
                "parameters": [
                    {
                        "name": "pnr",
                        "in": "query",
                        "description": "pnr",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "mobile",
                        "in": "query",
                        "description": "mobile",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ticket Cancel Information"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/CancelTicket": {
            "post": {
                "tags": [
                    "CancelTicket API"
                ],
                "summary": "refund initiated for ticket cancellation",
                "description": "refund initiated for ticket cancellation",
                "operationId": "App\\Http\\Controllers\\CancelTicketController::cancelTicket",
                "parameters": [
                    {
                        "name": "pnr",
                        "in": "query",
                        "description": "pnr",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "description": "user phone",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": " refund initiated"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/MakePayment": {
            "post": {
                "tags": [
                    "MakePayment API"
                ],
                "summary": "generating razorpay order Id",
                "description": "generating razorpay order Id",
                "operationId": "App\\Http\\Controllers\\ChannelController::makePayment",
                "parameters": [
                    {
                        "name": "busId",
                        "in": "query",
                        "description": "BusId",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sourceId",
                        "in": "query",
                        "description": "sourceId",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "destinationId",
                        "in": "query",
                        "description": "destinationId",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "transaction_id",
                        "in": "query",
                        "description": "customer transaction id against booking",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "seatIds[]",
                        "in": "query",
                        "description": "Seat ids",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "37",
                                "example": 37
                            }
                        }
                    },
                    {
                        "name": "entry_date",
                        "in": "query",
                        "description": "journey date",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "total price",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Order Id generated Successfully"
                    },
                    "406": {
                        "description": "seats already booked"
                    },
                    "404": {
                        "description": "Invalid Argument Passed"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/PaymentStatus": {
            "post": {
                "tags": [
                    "PaymentStatus API"
                ],
                "summary": "payment status success or failure",
                "operationId": "App\\Http\\Controllers\\ChannelController::pay",
                "requestBody": {
                    "description": "updating payment status and sending email/sms to customers with ticket booking details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "transaction_id": {
                                        "type": "string",
                                        "example": "20211102112722583214"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Bob"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "exapmle@gmail.com"
                                    },
                                    "routedetails": {
                                        "type": "string",
                                        "example": "Bhubaneswar-Bhadrak"
                                    },
                                    "razorpay_order_id": {
                                        "type": "string",
                                        "example": "order_IGcyPNVZ9fkc2t"
                                    },
                                    "razorpay_payment_id": {
                                        "type": "string",
                                        "example": "pay_IGcyXMFeqdRA23"
                                    },
                                    "razorpay_signature": {
                                        "type": "string",
                                        "example": "d75cef95085a484f7a40f6f5ba1dffaa4b7f06b2f2b88ee6e816c2babc1c7f12"
                                    },
                                    "bookingdate": {
                                        "type": "string",
                                        "example": "02-11-2021"
                                    },
                                    "journeydate": {
                                        "type": "string",
                                        "example": "02-11-2021"
                                    },
                                    "boarding_point": {
                                        "type": "string",
                                        "example": "Rasulgarh"
                                    },
                                    "departureTime": {
                                        "type": "string",
                                        "example": "05:00"
                                    },
                                    "dropping_point": {
                                        "type": "string",
                                        "example": "Bonth Chhawk"
                                    },
                                    "arrivalTime": {
                                        "type": "string",
                                        "example": "07:30"
                                    },
                                    "busname": {
                                        "type": "string",
                                        "example": "Bus 2"
                                    },
                                    "busNumber": {
                                        "type": "string",
                                        "example": "OD 01 AW 1234"
                                    },
                                    "bustype": {
                                        "type": "string",
                                        "example": "NON AC"
                                    },
                                    "busTypeName": {
                                        "type": "string",
                                        "example": "DELUX"
                                    },
                                    "sittingType": {
                                        "type": "string",
                                        "example": "2+2"
                                    },
                                    "conductor_number": {
                                        "type": "string",
                                        "example": "7978817539"
                                    },
                                    "totalfare": {
                                        "type": "string",
                                        "example": "285"
                                    },
                                    "seat_id": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "26"
                                        }
                                    },
                                    "seat_no": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "sl6"
                                        }
                                    },
                                    "discount": {
                                        "type": "string",
                                        "example": "0"
                                    },
                                    "payable_amount": {
                                        "type": "string",
                                        "example": "285"
                                    },
                                    "odbus_charges": {
                                        "type": "string",
                                        "example": "0"
                                    },
                                    "odbus_gst": {
                                        "type": "string",
                                        "example": "25"
                                    },
                                    "owner_fare": {
                                        "type": "string",
                                        "example": "250"
                                    },
                                    "source": {
                                        "type": "string",
                                        "example": "Bhubaneswar"
                                    },
                                    "destination": {
                                        "type": "string",
                                        "example": "Bhadrak"
                                    },
                                    "passengerDetails": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "seat_no": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "passenger_name": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "passenger_gender": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "passenger_age": {
                                                    "type": "string",
                                                    "example": ""
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "example": [
                                            {
                                                "seat_no": "ST1",
                                                "passenger_name": "Bob",
                                                "passenger_gender": "M",
                                                "passenger_age": "25"
                                            },
                                            {
                                                "seat_no": "ST2",
                                                "passenger_name": "Mom",
                                                "passenger_gender": "F",
                                                "passenger_age": "45"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment successfully done"
                    },
                    "402": {
                        "description": "Payment required"
                    },
                    "404": {
                        "description": "Invalid Argument Passed"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/AgentWalletPayment": {
            "post": {
                "tags": [
                    "AgentWalletPayment API"
                ],
                "summary": "Agent Wallet Payment to book tickets for customer",
                "description": "Agent Wallet Payment to book tickets for customer",
                "operationId": "App\\Http\\Controllers\\ChannelController::walletPayment",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "user id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "busId",
                        "in": "query",
                        "description": "BusId",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sourceId",
                        "in": "query",
                        "description": "sourceId",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "destinationId",
                        "in": "query",
                        "description": "destinationId",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "transaction_id",
                        "in": "query",
                        "description": "customer transaction id against booking",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "seatIds[]",
                        "in": "query",
                        "description": "Seat ids",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "37",
                                "example": 37
                            }
                        }
                    },
                    {
                        "name": "entry_date",
                        "in": "query",
                        "description": "journey date",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "total price",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Wallet Payment Successful"
                    },
                    "406": {
                        "description": "seats already booked"
                    },
                    "404": {
                        "description": "Invalid Argument Passed"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/AgentPaymentStatus": {
            "post": {
                "tags": [
                    "AgentPaymentStatus API"
                ],
                "summary": "payment status success or failure",
                "operationId": "App\\Http\\Controllers\\ChannelController::agentPaymentStatus",
                "requestBody": {
                    "description": "updating payment status and sending email/sms to customers with ticket booking details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "transaction_id": {
                                        "type": "string",
                                        "example": "20211102112722583214"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Bob"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "exapmle@gmail.com"
                                    },
                                    "routedetails": {
                                        "type": "string",
                                        "example": "Bhubaneswar-Bhadrak"
                                    },
                                    "razorpay_order_id": {
                                        "type": "string",
                                        "example": "order_IGcyPNVZ9fkc2t"
                                    },
                                    "razorpay_payment_id": {
                                        "type": "string",
                                        "example": "pay_IGcyXMFeqdRA23"
                                    },
                                    "razorpay_signature": {
                                        "type": "string",
                                        "example": "d75cef95085a484f7a40f6f5ba1dffaa4b7f06b2f2b88ee6e816c2babc1c7f12"
                                    },
                                    "bookingdate": {
                                        "type": "string",
                                        "example": "02-11-2021"
                                    },
                                    "journeydate": {
                                        "type": "string",
                                        "example": "02-11-2021"
                                    },
                                    "boarding_point": {
                                        "type": "string",
                                        "example": "Rasulgarh"
                                    },
                                    "departureTime": {
                                        "type": "string",
                                        "example": "05:00"
                                    },
                                    "dropping_point": {
                                        "type": "string",
                                        "example": "Bonth Chhawk"
                                    },
                                    "arrivalTime": {
                                        "type": "string",
                                        "example": "07:30"
                                    },
                                    "busname": {
                                        "type": "string",
                                        "example": "Bus 2"
                                    },
                                    "busNumber": {
                                        "type": "string",
                                        "example": "OD 01 AW 1234"
                                    },
                                    "bustype": {
                                        "type": "string",
                                        "example": "NON AC"
                                    },
                                    "busTypeName": {
                                        "type": "string",
                                        "example": "DELUX"
                                    },
                                    "sittingType": {
                                        "type": "string",
                                        "example": "2+2"
                                    },
                                    "conductor_number": {
                                        "type": "string",
                                        "example": "7978817539"
                                    },
                                    "totalfare": {
                                        "type": "string",
                                        "example": "285"
                                    },
                                    "seat_id": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "26"
                                        }
                                    },
                                    "seat_no": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "sl6"
                                        }
                                    },
                                    "discount": {
                                        "type": "string",
                                        "example": "0"
                                    },
                                    "payable_amount": {
                                        "type": "string",
                                        "example": "285"
                                    },
                                    "odbus_charges": {
                                        "type": "string",
                                        "example": "0"
                                    },
                                    "odbus_gst": {
                                        "type": "string",
                                        "example": "25"
                                    },
                                    "owner_fare": {
                                        "type": "string",
                                        "example": "250"
                                    },
                                    "source": {
                                        "type": "string",
                                        "example": "Bhubaneswar"
                                    },
                                    "destination": {
                                        "type": "string",
                                        "example": "Bhadrak"
                                    },
                                    "passengerDetails": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "seat_no": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "passenger_name": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "passenger_gender": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "passenger_age": {
                                                    "type": "string",
                                                    "example": ""
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "example": [
                                            {
                                                "seat_no": "ST1",
                                                "passenger_name": "Bob",
                                                "passenger_gender": "M",
                                                "passenger_age": "25"
                                            },
                                            {
                                                "seat_no": "ST2",
                                                "passenger_name": "Mom",
                                                "passenger_gender": "F",
                                                "passenger_age": "45"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment successfully done"
                    },
                    "402": {
                        "description": "Payment required"
                    },
                    "404": {
                        "description": "Invalid Argument Passed"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/CommonService": {
            "post": {
                "tags": [
                    "Get all Social media links"
                ],
                "summary": "Get all Social media links",
                "description": "Get all Social media links",
                "operationId": "App\\Http\\Controllers\\CommonController::getAll",
                "parameters": [
                    {
                        "name": "bus_operator_id",
                        "in": "query",
                        "description": "bus operator Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": 152
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get all Social media links"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/saveContacts": {
            "post": {
                "tags": [
                    "Add Contacts"
                ],
                "summary": "Add Contacts",
                "description": "Add Contacts",
                "operationId": "App\\Http\\Controllers\\ContactController::save",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "description": "phone",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "service",
                        "in": "query",
                        "description": "service",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "message",
                        "in": "query",
                        "description": "message",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Add Contacts of a acustomer"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/getLocation": {
            "get": {
                "tags": [
                    "getLocation API"
                ],
                "summary": "Get List of Locations",
                "description": "Locations with SearchValue params",
                "operationId": "App\\Http\\Controllers\\ListingController::getLocation",
                "parameters": [
                    {
                        "name": "locationName",
                        "in": "query",
                        "description": "name or synonym of Location",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "all locations"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/Listing": {
            "get": {
                "tags": [
                    "Listing API"
                ],
                "summary": "Get List of Buses",
                "description": "Listing",
                "operationId": "App\\Http\\Controllers\\ListingController::getAllListing",
                "parameters": [
                    {
                        "name": "source",
                        "in": "query",
                        "description": "name of source",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "destination",
                        "in": "query",
                        "description": "name of destination",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entry_date",
                        "in": "query",
                        "description": "journey date",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bus_operator_id",
                        "in": "query",
                        "description": "bus operator id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Buses"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/Filter": {
            "get": {
                "tags": [
                    "Filter API"
                ],
                "summary": "Get List of Buses with Filter Params",
                "description": "Filter",
                "operationId": "App\\Http\\Controllers\\ListingController::filter",
                "parameters": [
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Buses sort by price:0-without sorting, 1- ascending order sorting",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sourceID",
                        "in": "query",
                        "description": "source Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "destinationID",
                        "in": "query",
                        "description": "destination Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "entry_date",
                        "in": "query",
                        "description": "journey date",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bus_operator_id",
                        "in": "query",
                        "description": "bus operator id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "busType[]",
                        "in": "query",
                        "description": "AC or NONAC type Bus:1-AC, 2-NONAC",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        }
                    },
                    {
                        "name": "seatType[]",
                        "in": "query",
                        "description": "Seater or Sleeper type Bus:1-seater, 2&3-sleeper",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        }
                    },
                    {
                        "name": "boardingPointId[]",
                        "in": "query",
                        "description": "Boarding point Ids",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        }
                    },
                    {
                        "name": "dropingingPointId[]",
                        "in": "query",
                        "description": "Dropping point Ids",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        }
                    },
                    {
                        "name": "operatorId[]",
                        "in": "query",
                        "description": "Operator Ids",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        }
                    },
                    {
                        "name": "amenityId[]",
                        "in": "query",
                        "description": "Amenity Ids",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Buses"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/FilterOptions": {
            "get": {
                "tags": [
                    "FilterOptions API"
                ],
                "summary": "Get all Filter options",
                "description": "get all Filter options for BusType,SeatType,BoardingPoints,DroppingPoints,Operators,Amenities",
                "operationId": "App\\Http\\Controllers\\ListingController::getFilterOptions",
                "parameters": [
                    {
                        "name": "sourceID",
                        "in": "query",
                        "description": "source Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "destinationID",
                        "in": "query",
                        "description": "destination Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get all Filter Options"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/BusDetails": {
            "get": {
                "tags": [
                    "BusDetails API"
                ],
                "summary": "Get Details of a Bus",
                "description": "BusDetails",
                "operationId": "App\\Http\\Controllers\\ListingController::busDetails",
                "parameters": [
                    {
                        "name": "bus_id",
                        "in": "query",
                        "description": "bus Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "source_id",
                        "in": "query",
                        "description": "source Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "destination_id",
                        "in": "query",
                        "description": "destination Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bus Details"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/Offers": {
            "post": {
                "tags": [
                    "Offers API"
                ],
                "summary": "Get all Offers",
                "description": "get all Offers",
                "operationId": "App\\Http\\Controllers\\OfferController::offers",
                "parameters": [
                    {
                        "name": "bus_operator_id",
                        "in": "query",
                        "description": "bus operator Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get all Offers"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/Coupons": {
            "post": {
                "tags": [
                    "Coupons API"
                ],
                "summary": "Get all Valid Coupons",
                "description": "get all Valid Coupons",
                "operationId": "App\\Http\\Controllers\\OfferController::coupons",
                "parameters": [
                    {
                        "name": "coupon_code",
                        "in": "query",
                        "description": "coupon code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bus_id",
                        "in": "query",
                        "description": "bus Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "source_id",
                        "in": "query",
                        "description": "source id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "destination_id",
                        "in": "query",
                        "description": "destination id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "journey_date",
                        "in": "query",
                        "description": "journey id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bus_operator_id",
                        "in": "query",
                        "description": "bus operator id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "total_fare",
                        "in": "query",
                        "description": "total fare",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "transaction_id",
                        "in": "query",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get all Valid Coupons"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/AllPathUrls": {
            "get": {
                "tags": [
                    "All PathUrls API"
                ],
                "summary": "get all Path Urls",
                "description": "get all Path Urls",
                "operationId": "App\\Http\\Controllers\\OfferController::getPathUrls",
                "responses": {
                    "200": {
                        "description": "get all Path Urls"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/GetPageData": {
            "post": {
                "tags": [
                    "Get Page contents"
                ],
                "summary": "Get Page contents",
                "description": "Get Page contents",
                "operationId": "App\\Http\\Controllers\\PageContentController::getAllpagecontent",
                "parameters": [
                    {
                        "name": "bus_operator_id",
                        "in": "query",
                        "description": "bus operator Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": 152
                        }
                    },
                    {
                        "name": "page_url",
                        "in": "query",
                        "description": "page url",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "about-us"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get all Page contents"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/PopularRoutes": {
            "get": {
                "tags": [
                    "PopularRoutes API"
                ],
                "summary": "get all Popular Routes",
                "description": "get all Popular Routes",
                "operationId": "App\\Http\\Controllers\\PopularController::getPopularRoutes",
                "responses": {
                    "200": {
                        "description": "get all Popular Routes"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/TopOperators": {
            "get": {
                "tags": [
                    "TopOperators API"
                ],
                "summary": "get all Top Operators",
                "description": "get all Top Operators",
                "operationId": "App\\Http\\Controllers\\PopularController::getTopOperators",
                "responses": {
                    "200": {
                        "description": "get all Top Operators"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/AllRoutes": {
            "get": {
                "tags": [
                    "All Routes API"
                ],
                "summary": "get all Routes of bus running",
                "description": "get all Routes of bus running",
                "operationId": "App\\Http\\Controllers\\PopularController::allRoutes",
                "responses": {
                    "200": {
                        "description": "Record Fetched Successfully"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/AllOperators": {
            "get": {
                "tags": [
                    "All Operators API"
                ],
                "summary": "get all Operators names",
                "description": "get all Operators names",
                "operationId": "App\\Http\\Controllers\\PopularController::allOperators",
                "responses": {
                    "200": {
                        "description": "Record Fetched Successfully"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/OperatorDetails": {
            "get": {
                "tags": [
                    "Operator's Details"
                ],
                "summary": "Operator's Details",
                "description": "Operator's Details",
                "operationId": "App\\Http\\Controllers\\PopularController::operatorDetails",
                "parameters": [
                    {
                        "name": "operator_url",
                        "in": "query",
                        "description": "operator url",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record Fetched Successfully"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/RecentSearch": {
            "post": {
                "tags": [
                    "Save Recent Search of a user"
                ],
                "summary": "Save Recent Search of a user",
                "description": "Save Recent Search of a user",
                "operationId": "App\\Http\\Controllers\\RecentSearchController::createSearch",
                "parameters": [
                    {
                        "name": "users_id",
                        "in": "query",
                        "description": "users id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "description": "source name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "destination",
                        "in": "query",
                        "description": "destination Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "journey_date",
                        "in": "query",
                        "description": "journey date",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Save search details of a user"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/RecentSearch/{userId}": {
            "get": {
                "tags": [
                    "Get Recent Search details of a User"
                ],
                "summary": "Get Recent Search details of a User",
                "operationId": "App\\Http\\Controllers\\RecentSearchController::getSearchDetails",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Get Recent Search details of a User",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Recent Search of a User"
                    },
                    "404": {
                        "description": "Record not Found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/allReviews": {
            "get": {
                "tags": [
                    "All Reviews"
                ],
                "summary": "get all Reviews of a customer",
                "description": "get all Reviews of a customer",
                "operationId": "App\\Http\\Controllers\\ReviewController::getAllReview",
                "responses": {
                    "200": {
                        "description": "get all Reviews of a customer"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/AddReview": {
            "post": {
                "tags": [
                    "Add Review by a customer"
                ],
                "summary": "Add Review of a customer",
                "description": "Add Review of a customer",
                "operationId": "App\\Http\\Controllers\\ReviewController::createReview",
                "parameters": [
                    {
                        "name": "pnr",
                        "in": "query",
                        "description": "pnr",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bus_id",
                        "in": "query",
                        "description": "bus Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "users_id",
                        "in": "query",
                        "description": "users id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "reference_key",
                        "in": "query",
                        "description": "reference key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rating_overall",
                        "in": "query",
                        "description": "rating overall",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "rating_comfort",
                        "in": "query",
                        "description": "rating comfort",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "rating_clean",
                        "in": "query",
                        "description": "rating_clean",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "rating_behavior",
                        "in": "query",
                        "description": "rating_behavior",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "rating_timing",
                        "in": "query",
                        "description": "rating_timing",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "comments",
                        "in": "query",
                        "description": "comments",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "title",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "description": "created_by",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Add reviews by a customer"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/UpdateReview/{id}": {
            "put": {
                "tags": [
                    "Update existing Review"
                ],
                "summary": "Update Review",
                "operationId": "App\\Http\\Controllers\\ReviewController::updateReview",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Add Review of a customer",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pnr",
                        "in": "query",
                        "description": "pnr",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bus_id",
                        "in": "query",
                        "description": "bus Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "users_id",
                        "in": "query",
                        "description": "users id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "reference_key",
                        "in": "query",
                        "description": "reference key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rating_overall",
                        "in": "query",
                        "description": "rating overall",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "rating_comfort",
                        "in": "query",
                        "description": "rating comfort",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "rating_clean",
                        "in": "query",
                        "description": "rating_clean",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "rating_behavior",
                        "in": "query",
                        "description": "rating_behavior",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "rating_timing",
                        "in": "query",
                        "description": "rating_timing",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "comments",
                        "in": "query",
                        "description": "comments",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "title",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "description": "created_by",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Updated reviews by a customer"
                    },
                    "404": {
                        "description": "Record not Found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/DeleteReview/{id}": {
            "delete": {
                "tags": [
                    "Delete Review"
                ],
                "summary": "Delete Review",
                "operationId": "App\\Http\\Controllers\\ReviewController::deleteReview",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Delete Review of a customer",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Delete Review"
                    },
                    "404": {
                        "description": "Record not Found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/ReviewDetail/{id}": {
            "get": {
                "tags": [
                    "Review detail of a customer"
                ],
                "summary": "Review detail of a customer",
                "operationId": "App\\Http\\Controllers\\ReviewController::getReview",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Review detail of a customer",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Review of a Customer"
                    },
                    "404": {
                        "description": "Record not Found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/SingleBusReviewList/{bid}": {
            "get": {
                "tags": [
                    "Reviews on Single Bus"
                ],
                "summary": "Reviews on Single Bus",
                "operationId": "App\\Http\\Controllers\\ReviewController::getReviewByBid",
                "parameters": [
                    {
                        "name": "bid",
                        "in": "path",
                        "description": "Reviews on Single Bus",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Review of a Single Bus"
                    },
                    "404": {
                        "description": "Record not Found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/seolist": {
            "get": {
                "tags": [
                    "Get all SEO lists"
                ],
                "summary": "Get all SEO lists",
                "description": "Get all SEO lists",
                "operationId": "App\\Http\\Controllers\\SeoController::seolist",
                "parameters": [
                    {
                        "name": "bus_operator_id",
                        "in": "query",
                        "description": "bus operator Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": 152
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get all SEO lists"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/GetTestimonial": {
            "post": {
                "tags": [
                    "Get all Testimonials"
                ],
                "summary": "Get all Testimonials",
                "description": "Get all Testimonials",
                "operationId": "App\\Http\\Controllers\\TestimonialController::getAlltestimonial",
                "parameters": [
                    {
                        "name": "bus_operator_id",
                        "in": "query",
                        "description": "bus operator Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": 152
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get all Testimonials"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/Register": {
            "post": {
                "tags": [
                    "Register API"
                ],
                "summary": "send OTP to user for registration",
                "description": "user detatils saved and otp generated",
                "operationId": "App\\Http\\Controllers\\UsersController::Register",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "name of user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "email of user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "description": "mobile number of user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "description": "created by",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "otp generated"
                    },
                    "206": {
                        "description": "not a valid credential"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/VerifyOtp": {
            "post": {
                "tags": [
                    "Verify Otp"
                ],
                "summary": "otp verification",
                "description": "otp verification",
                "operationId": "App\\Http\\Controllers\\UsersController::verifyOtp",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "user Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "otp",
                        "in": "query",
                        "description": "otp sent to user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Registered successfully"
                    },
                    "206": {
                        "description": "otp not provided"
                    },
                    "406": {
                        "description": "Invalid otp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/Login": {
            "post": {
                "tags": [
                    "Login API"
                ],
                "summary": "user login using phone or email",
                "description": "user login using phone or email",
                "operationId": "App\\Http\\Controllers\\UsersController::login",
                "parameters": [
                    {
                        "name": "phone",
                        "in": "query",
                        "description": "phone of user",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "email of user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "otp generated"
                    },
                    "206": {
                        "description": "not a valid credential"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/UserProfile": {
            "get": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Get user details",
                "operationId": "App\\Http\\Controllers\\UsersController::userProfile",
                "responses": {
                    "200": {
                        "description": "Authorized User details"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/updateProfile/{id}{token}": {
            "put": {
                "tags": [
                    "update User Profile"
                ],
                "summary": "Update User Profile",
                "operationId": "App\\Http\\Controllers\\UsersController::updateProfile",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "token",
                        "in": "path",
                        "description": "User Token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "user name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "user email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pincode",
                        "in": "query",
                        "description": "pincode",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "street",
                        "in": "query",
                        "description": "street",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "district",
                        "in": "query",
                        "description": "district",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "address",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "profile_image",
                        "in": "query",
                        "description": "profile image",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update User Profile"
                    },
                    "404": {
                        "description": "Record not Found"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/BookingHistory": {
            "post": {
                "tags": [
                    "Booking History of a Customer"
                ],
                "summary": "Get Booking History of a Customer",
                "description": "Get Booking History of a Customer",
                "operationId": "App\\Http\\Controllers\\UsersController::BookingHistory",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "user Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "rating_overall",
                        "in": "query",
                        "description": "rating overall",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Booking Details Of a Customer"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/UserReviews": {
            "get": {
                "tags": [
                    "User Reviews"
                ],
                "summary": "Get userReviews of an authenticated user",
                "description": "Get user  review details",
                "operationId": "getAuthUser",
                "responses": {
                    "200": {
                        "description": "authorized user reviews",
                        "headers": {
                            "X-Rate-Limit": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "X-Expires-After": {
                                "schema": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/viewSeats": {
            "get": {
                "tags": [
                    "viewSeats API"
                ],
                "summary": "Get seat information for a Bus with seat layout",
                "description": "get all seat Information  for a Bus",
                "operationId": "App\\Http\\Controllers\\ViewSeatsController::getAllViewSeats",
                "parameters": [
                    {
                        "name": "entry_date",
                        "in": "query",
                        "description": "searching date",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "busId",
                        "in": "query",
                        "description": "bus Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sourceId",
                        "in": "query",
                        "description": "source Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "destinationId",
                        "in": "query",
                        "description": "destination Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": " get all seats information"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/PriceOnSeatsSelection": {
            "get": {
                "tags": [
                    "PriceOnSeatsSelection API"
                ],
                "summary": "get total price on seat selection",
                "description": "get total price on seat selection",
                "operationId": "App\\Http\\Controllers\\ViewSeatsController::getPriceOnSeatsSelection",
                "parameters": [
                    {
                        "name": "busId",
                        "in": "query",
                        "description": "bus Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sourceId",
                        "in": "query",
                        "description": "source Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "destinationId",
                        "in": "query",
                        "description": "destination Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "busOperatorId",
                        "in": "query",
                        "description": "busOperator Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "seater[string]",
                        "in": "query",
                        "description": "seater Ids",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        }
                    },
                    {
                        "name": "sleeper[]",
                        "in": "query",
                        "description": "sleeper Ids",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": " get Total Price on seats selection"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/BoardingDroppingPoints": {
            "get": {
                "tags": [
                    "BoardingDroppingPoints API"
                ],
                "summary": "get all Boarding Dropping Points",
                "description": "get all Boarding Dropping Points for source and destination",
                "operationId": "App\\Http\\Controllers\\ViewSeatsController::getBoardingDroppingPoints",
                "parameters": [
                    {
                        "name": "busId",
                        "in": "query",
                        "description": "bus Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sourceId",
                        "in": "query",
                        "description": "source Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "destinationId",
                        "in": "query",
                        "description": "destination Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": " get all Boarding Dropping Points"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "apiAuth": {
                "type": "http",
                "name": "Token based",
                "in": "header",
                "bearerFormat": "AUTH0",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        []
    ]
}